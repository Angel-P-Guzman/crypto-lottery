{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "enter",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPlayers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pickWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Lottery.sol"
  },
  "ast": {
    "absolutePath": "contracts/Lottery.sol",
    "exportedSymbols": {
      "Lottery": [
        113
      ]
    },
    "id": 114,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Lottery",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 113,
        "linearizedBaseContracts": [
          113
        ],
        "name": "Lottery",
        "nameLocation": "66:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "481c6a75",
            "id": 3,
            "mutability": "mutable",
            "name": "manager",
            "nameLocation": "95:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 113,
            "src": "80:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "80:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f71d96cb",
            "id": 6,
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "125:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 113,
            "src": "108:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 4,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "108:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 5,
              "nodeType": "ArrayTypeName",
              "src": "108:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14,
              "nodeType": "Block",
              "src": "153:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "manager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "163:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 10,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "173:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 11,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "177:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "173:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "163:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 13,
                  "nodeType": "ExpressionStatement",
                  "src": "163:20:0"
                }
              ]
            },
            "id": 15,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "150:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "153:0:0"
            },
            "scope": 113,
            "src": "139:51:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 33,
              "nodeType": "Block",
              "src": "228:112:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "246:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "250:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "246:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "302e3031",
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "259:10:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        },
                        "src": "246:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e696d756d20302e303120455448207265717569726564",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "271:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7322eb032fd9be670a1b51b25cb4aaec71011d45b78f0d0324ea3a943de2c2ca",
                          "typeString": "literal_string \"Minimum 0.01 ETH required\""
                        },
                        "value": "Minimum 0.01 ETH required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7322eb032fd9be670a1b51b25cb4aaec71011d45b78f0d0324ea3a943de2c2ca",
                          "typeString": "literal_string \"Minimum 0.01 ETH required\""
                        }
                      ],
                      "id": 18,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "238:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "238:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "238:61:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 29,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "322:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "326:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "322:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 26,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "309:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 28,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "317:4:0",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "309:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "309:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "309:24:0"
                }
              ]
            },
            "functionSelector": "e97dcb62",
            "id": 34,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enter",
            "nameLocation": "205:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "210:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:0:0"
            },
            "scope": 113,
            "src": "196:144:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 42,
              "nodeType": "Block",
              "src": "407:31:0",
              "statements": [
                {
                  "expression": {
                    "id": 40,
                    "name": "players",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "424:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 39,
                  "id": 41,
                  "nodeType": "Return",
                  "src": "417:14:0"
                }
              ]
            },
            "functionSelector": "8b5b9ccc",
            "id": 43,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPlayers",
            "nameLocation": "355:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:2:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43,
                  "src": "389:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 36,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "389:7:0",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 37,
                    "nodeType": "ArrayTypeName",
                    "src": "389:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "388:18:0"
            },
            "scope": 113,
            "src": "346:92:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 91,
              "nodeType": "Block",
              "src": "473:310:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 47,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "491:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 48,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "495:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "491:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 49,
                          "name": "manager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "505:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "491:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206d616e616765722063616e207069636b2077696e6e6572",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "514:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34318f1d33480513b80a05cdf45943da9adb24cbc967ef0e87e2b57b3ff08bc1",
                          "typeString": "literal_string \"Only manager can pick winner\""
                        },
                        "value": "Only manager can pick winner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34318f1d33480513b80a05cdf45943da9adb24cbc967ef0e87e2b57b3ff08bc1",
                          "typeString": "literal_string \"Only manager can pick winner\""
                        }
                      ],
                      "id": 46,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "483:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "483:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "483:62:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 55,
                            "name": "players",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6,
                            "src": "563:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "571:6:0",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "563:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "33",
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "581:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        },
                        "src": "563:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820706c6179657273",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "584:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_543cde6d57481e61eff19dce080efaaf31452fee1732d8dfc4ed801d034e0f39",
                          "typeString": "literal_string \"Not enough players\""
                        },
                        "value": "Not enough players"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_543cde6d57481e61eff19dce080efaaf31452fee1732d8dfc4ed801d034e0f39",
                          "typeString": "literal_string \"Not enough players\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "555:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "555:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "555:50:0"
                },
                {
                  "assignments": [
                    63
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "621:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "616:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "616:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 64,
                        "name": "random",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 112,
                        "src": "629:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "629:8:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 66,
                        "name": "players",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "640:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "648:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "640:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "629:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "616:38:0"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "winner",
                      "nameLocation": "672:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 91,
                      "src": "664:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "664:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 75,
                  "initialValue": {
                    "baseExpression": {
                      "id": 72,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "681:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 74,
                    "indexExpression": {
                      "id": 73,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 63,
                      "src": "689:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "681:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "664:31:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 83,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "738:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Lottery_$113",
                                "typeString": "contract Lottery"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Lottery_$113",
                                "typeString": "contract Lottery"
                              }
                            ],
                            "id": 82,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "730:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 81,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "730:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "730:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "744:7:0",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "730:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 78,
                            "name": "winner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "713:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "705:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 76,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "705:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 79,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "705:15:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 80,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "721:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "705:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "705:47:0"
                },
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "762:14:0",
                    "subExpression": {
                      "id": 88,
                      "name": "players",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "769:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "762:14:0"
                }
              ]
            },
            "functionSelector": "5d495aea",
            "id": 92,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pickWinner",
            "nameLocation": "453:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "463:2:0"
            },
            "returnParameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "473:0:0"
            },
            "scope": 113,
            "src": "444:339:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "835:101:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 102,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "884:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "890:10:0",
                                "memberName": "difficulty",
                                "nodeType": "MemberAccess",
                                "src": "884:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "expression": {
                                  "id": 104,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "902:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "908:9:0",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "902:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 106,
                                "name": "players",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6,
                                "src": "919:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              ],
                              "expression": {
                                "id": 100,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "867:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 101,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "871:12:0",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "867:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "867:60:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 99,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "857:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "857:71:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "852:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 97,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "852:4:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "852:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 96,
                  "id": 110,
                  "nodeType": "Return",
                  "src": "845:84:0"
                }
              ]
            },
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "random",
            "nameLocation": "798:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 93,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "804:2:0"
            },
            "returnParameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "829:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "828:6:0"
            },
            "scope": 113,
            "src": "789:147:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 114,
        "src": "57:881:0",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:907:0"
  },
  "bytecode": "6080604052348015600f57600080fd5b50600080546001600160a01b031916331790556104d2806100316000396000f3fe60806040526004361061004a5760003560e01c8063481c6a751461004f5780635d495aea1461008c5780638b5b9ccc146100a3578063e97dcb62146100c5578063f71d96cb146100cd575b600080fd5b34801561005b57600080fd5b5060005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561009857600080fd5b506100a16100ed565b005b3480156100af57600080fd5b506100b8610218565b60405161008391906103ae565b6100a161027a565b3480156100d957600080fd5b5061006f6100e83660046103fa565b610314565b6000546001600160a01b0316331461014c5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c79206d616e616765722063616e207069636b2077696e6e65720000000060448201526064015b60405180910390fd5b600154600311156101945760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f75676820706c617965727360701b6044820152606401610143565b6001546000906101a261033e565b6101ac9190610413565b90506000600182815481106101c3576101c3610435565b60009182526020822001546040516001600160a01b03909116925082914780156108fc02929091818181858888f19350505050158015610207573d6000803e3d6000fd5b5061021460016000610374565b5050565b6060600180548060200260200160405190810160405280929190818152602001828054801561027057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610252575b5050505050905090565b662386f26fc100003410156102d15760405162461bcd60e51b815260206004820152601960248201527f4d696e696d756d20302e303120455448207265717569726564000000000000006044820152606401610143565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b6001818154811061032457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000444260016040516020016103569392919061044b565b6040516020818303038152906040528051906020012060001c905090565b50805460008255906000526020600020908101906103929190610395565b50565b5b808211156103aa5760008155600101610396565b5090565b602080825282518282018190526000918401906040840190835b818110156103ef5783516001600160a01b03168352602093840193909201916001016103c8565b509095945050505050565b60006020828403121561040c57600080fd5b5035919050565b60008261043057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b838152826020820152600060408201835484600052602060002060005b8281101561048f5781546001600160a01b0316845260209093019260019182019101610468565b509197965050505050505056fea264697066735822122065ec57d44547f1b1f3419b161f486a86c33d0c68867e75dc6063d50ecf0d965164736f6c634300081d0033",
  "bytecodeSha1": "07b2f5ea07c360ca799c29ae2fd1231108fe4bde",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.29+commit.ab55807c"
  },
  "contractName": "Lottery",
  "coverageMap": {
    "branches": {
      "0": {
        "Lottery.enter": {
          "10": [
            246,
            269,
            true
          ]
        },
        "Lottery.pickWinner": {
          "8": [
            491,
            512,
            true
          ],
          "9": [
            563,
            582,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Lottery.enter": {
          "5": [
            238,
            299
          ],
          "6": [
            309,
            333
          ]
        },
        "Lottery.getPlayers": {
          "4": [
            417,
            431
          ]
        },
        "Lottery.pickWinner": {
          "0": [
            483,
            545
          ],
          "1": [
            555,
            605
          ],
          "2": [
            705,
            752
          ],
          "3": [
            762,
            776
          ]
        },
        "Lottery.random": {
          "7": [
            845,
            929
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061004a5760003560e01c8063481c6a751461004f5780635d495aea1461008c5780638b5b9ccc146100a3578063e97dcb62146100c5578063f71d96cb146100cd575b600080fd5b34801561005b57600080fd5b5060005461006f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561009857600080fd5b506100a16100ed565b005b3480156100af57600080fd5b506100b8610218565b60405161008391906103ae565b6100a161027a565b3480156100d957600080fd5b5061006f6100e83660046103fa565b610314565b6000546001600160a01b0316331461014c5760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c79206d616e616765722063616e207069636b2077696e6e65720000000060448201526064015b60405180910390fd5b600154600311156101945760405162461bcd60e51b81526020600482015260126024820152714e6f7420656e6f75676820706c617965727360701b6044820152606401610143565b6001546000906101a261033e565b6101ac9190610413565b90506000600182815481106101c3576101c3610435565b60009182526020822001546040516001600160a01b03909116925082914780156108fc02929091818181858888f19350505050158015610207573d6000803e3d6000fd5b5061021460016000610374565b5050565b6060600180548060200260200160405190810160405280929190818152602001828054801561027057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610252575b5050505050905090565b662386f26fc100003410156102d15760405162461bcd60e51b815260206004820152601960248201527f4d696e696d756d20302e303120455448207265717569726564000000000000006044820152606401610143565b6001805480820182556000919091527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b03191633179055565b6001818154811061032457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000444260016040516020016103569392919061044b565b6040516020818303038152906040528051906020012060001c905090565b50805460008255906000526020600020908101906103929190610395565b50565b5b808211156103aa5760008155600101610396565b5090565b602080825282518282018190526000918401906040840190835b818110156103ef5783516001600160a01b03168352602093840193909201916001016103c8565b509095945050505050565b60006020828403121561040c57600080fd5b5035919050565b60008261043057634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b838152826020820152600060408201835484600052602060002060005b8281101561048f5781546001600160a01b0316845260209093019260019182019101610468565b509197965050505050505056fea264697066735822122065ec57d44547f1b1f3419b161f486a86c33d0c68867e75dc6063d50ecf0d965164736f6c634300081d0033",
  "deployedSourceMap": "57:881:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;80:22;;;;;;;;;;-1:-1:-1;80:22:0;;;;-1:-1:-1;;;;;80:22:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;80:22:0;;;;;;;;444:339;;;;;;;;;;;;;:::i;:::-;;346:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;196:144::-;;;:::i;108:24::-;;;;;;;;;;-1:-1:-1;108:24:0;;;;;:::i;:::-;;:::i;444:339::-;505:7;;-1:-1:-1;;;;;505:7:0;491:10;:21;483:62;;;;-1:-1:-1;;;483:62:0;;1251:2:1;483:62:0;;;1233:21:1;1290:2;1270:18;;;1263:30;1329;1309:18;;;1302:58;1377:18;;483:62:0;;;;;;;;;563:7;:14;581:1;-1:-1:-1;563:19:0;555:50;;;;-1:-1:-1;;;555:50:0;;1608:2:1;555:50:0;;;1590:21:1;1647:2;1627:18;;;1620:30;-1:-1:-1;;;1666:18:1;;;1659:48;1724:18;;555:50:0;1406:342:1;555:50:0;640:7;:14;616:10;;629:8;:6;:8::i;:::-;:25;;;;:::i;:::-;616:38;;664:14;681:7;689:5;681:14;;;;;;;;:::i;:::-;;;;;;;;;;705:47;;-1:-1:-1;;;;;681:14:0;;;;-1:-1:-1;681:14:0;;730:21;705:47;;;;;730:21;;705:47;681:14;705:47;730:21;681:14;705:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;762:14:0;769:7;;762:14;:::i;:::-;473:310;;444:339::o;346:92::-;389:16;424:7;417:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;417:14:0;;;;;;;;;;;;;;;;;;;;;;;346:92;:::o;196:144::-;259:10;246:9;:23;;238:61;;;;-1:-1:-1;;;238:61:0;;2301:2:1;238:61:0;;;2283:21:1;2340:2;2320:18;;;2313:30;2379:27;2359:18;;;2352:55;2424:18;;238:61:0;2099:349:1;238:61:0;309:7;:24;;;;;;;-1:-1:-1;309:24:0;;;;;;;;-1:-1:-1;;;;;;309:24:0;322:10;309:24;;;196:144::o;108:24::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;108:24:0;;-1:-1:-1;108:24:0;:::o;789:147::-;829:4;884:16;902:15;919:7;867:60;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;857:71;;;;;;852:77;;845:84;;789:147;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;222:637:1:-;412:2;424:21;;;494:13;;397:18;;;516:22;;;364:4;;595:15;;;569:2;554:18;;;364:4;638:195;652:6;649:1;646:13;638:195;;;717:13;;-1:-1:-1;;;;;713:39:1;701:52;;782:2;808:15;;;;773:12;;;;749:1;667:9;638:195;;;-1:-1:-1;850:3:1;;222:637;-1:-1:-1;;;;;222:637:1:o;864:180::-;923:6;976:2;964:9;955:7;951:23;947:32;944:52;;;992:1;989;982:12;944:52;-1:-1:-1;1015:23:1;;864:180;-1:-1:-1;864:180:1:o;1753:209::-;1785:1;1811;1801:132;;1855:10;1850:3;1846:20;1843:1;1836:31;1890:4;1887:1;1880:15;1918:4;1915:1;1908:15;1801:132;-1:-1:-1;1947:9:1;;1753:209::o;1967:127::-;2028:10;2023:3;2019:20;2016:1;2009:31;2059:4;2056:1;2049:15;2083:4;2080:1;2073:15;2453:701;2697:6;2692:3;2685:19;2734:6;2729:2;2724:3;2720:12;2713:28;2667:3;2772:2;2767:3;2763:12;2804:6;2798:13;2853:6;2850:1;2843:17;2896:2;2893:1;2883:16;2917:1;2927:200;2941:6;2938:1;2935:13;2927:200;;;3008:13;;-1:-1:-1;;;;;3004:39:1;2990:54;;3077:2;3066:14;;;;3040:1;3103:14;;;;2956:9;2927:200;;;-1:-1:-1;3143:5:1;;2453:701;-1:-1:-1;;;;;;;2453:701:1:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    57,
    938
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x481C6A75 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x5D495AEA EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x8B5B9CCC EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xE97DCB62 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0xCD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0xED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB8 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x3AE JUMP JUMPDEST PUSH2 0xA1 PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206D616E616765722063616E207069636B2077696E6E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 GT ISZERO PUSH2 0x194 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F7420656E6F75676820706C6179657273 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1A2 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x413 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C3 JUMPI PUSH2 0x1C3 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP3 SWAP2 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x207 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x214 PUSH1 0x1 PUSH1 0x0 PUSH2 0x374 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x252 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH7 0x2386F26FC10000 CALLVALUE LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E696D756D20302E30312045544820726571756972656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x143 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DIFFICULTY TIMESTAMP PUSH1 0x1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x356 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x392 SWAP2 SWAP1 PUSH2 0x395 JUMP JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x396 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3EF JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3C8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x430 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD DUP4 SLOAD DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x48F JUMPI DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x468 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xEC57D44547F1 0xB1 RETURN COINBASE SWAP12 AND 0x1F BASEFEE PUSH11 0x86C33D0C68867E75DC6063 0xD5 0xE 0xCF 0xD SWAP7 MLOAD PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        57,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A"
    },
    "12": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x481C6A75"
    },
    "25": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4F"
    },
    "29": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x5D495AEA"
    },
    "36": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8C"
    },
    "40": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x8B5B9CCC"
    },
    "47": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "51": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE97DCB62"
    },
    "58": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC5"
    },
    "62": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xF71D96CB"
    },
    "69": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCD"
    },
    "73": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "77": {
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "DUP1",
      "path": "0"
    },
    "78": {
      "first_revert": true,
      "fn": null,
      "offset": [
        57,
        938
      ],
      "op": "REVERT",
      "path": "0"
    },
    "79": {
      "offset": [
        80,
        102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "81": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "DUP1",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "83": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B"
    },
    "86": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "REVERT",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "92": {
      "op": "POP"
    },
    "93": {
      "offset": [
        80,
        102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "95": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "96": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "99": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "106": {
      "op": "SHL"
    },
    "107": {
      "op": "SUB"
    },
    "108": {
      "offset": [
        80,
        102
      ],
      "op": "AND",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "DUP2",
      "path": "0"
    },
    "110": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "JUMP",
      "path": "0"
    },
    "111": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "114": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "121": {
      "op": "SHL"
    },
    "122": {
      "op": "SUB"
    },
    "123": {
      "op": "SWAP1"
    },
    "124": {
      "op": "SWAP2"
    },
    "125": {
      "op": "AND"
    },
    "126": {
      "op": "DUP2"
    },
    "127": {
      "op": "MSTORE"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "130": {
      "op": "ADD"
    },
    "131": {
      "offset": [
        80,
        102
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "132": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "134": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "135": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "DUP1",
      "path": "0"
    },
    "136": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "SUB",
      "path": "0"
    },
    "138": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "139": {
      "fn": null,
      "offset": [
        80,
        102
      ],
      "op": "RETURN",
      "path": "0"
    },
    "140": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "141": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "142": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "143": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "144": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x98"
    },
    "147": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "148": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "150": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "DUP1",
      "path": "0"
    },
    "151": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "REVERT",
      "path": "0"
    },
    "152": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "153": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "POP",
      "path": "0"
    },
    "154": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "157": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xED"
    },
    "160": {
      "fn": "Lottery.pickWinner",
      "jump": "i",
      "offset": [
        444,
        783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "161": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "STOP",
      "path": "0"
    },
    "163": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "165": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "DUP1",
      "path": "0"
    },
    "166": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "167": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAF"
    },
    "170": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "171": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "173": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "DUP1",
      "path": "0"
    },
    "174": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "REVERT",
      "path": "0"
    },
    "175": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "176": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "POP",
      "path": "0"
    },
    "177": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB8"
    },
    "180": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218"
    },
    "183": {
      "fn": "Lottery.getPlayers",
      "jump": "i",
      "offset": [
        346,
        438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "184": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "185": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "187": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "188": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83"
    },
    "191": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "192": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "193": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3AE"
    },
    "196": {
      "fn": "Lottery.getPlayers",
      "jump": "i",
      "offset": [
        346,
        438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "197": {
      "fn": "Lottery.enter",
      "offset": [
        196,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "198": {
      "fn": "Lottery.enter",
      "offset": [
        196,
        340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "201": {
      "fn": "Lottery.enter",
      "offset": [
        196,
        340
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x27A"
    },
    "204": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        196,
        340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "205": {
      "offset": [
        108,
        132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "206": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "207": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP1",
      "path": "0"
    },
    "208": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "209": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD9"
    },
    "212": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "213": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "215": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP1",
      "path": "0"
    },
    "216": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "REVERT",
      "path": "0"
    },
    "217": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "offset": [
        108,
        132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "222": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE8"
    },
    "225": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "226": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "228": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FA"
    },
    "231": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        108,
        132
      ],
      "op": "JUMP",
      "path": "0"
    },
    "232": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "233": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x314"
    },
    "236": {
      "fn": "Lottery.enter",
      "jump": "i",
      "offset": [
        108,
        132
      ],
      "op": "JUMP",
      "path": "0"
    },
    "237": {
      "fn": "Lottery.pickWinner",
      "offset": [
        444,
        783
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "238": {
      "fn": "Lottery.pickWinner",
      "offset": [
        505,
        512
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x0"
    },
    "240": {
      "fn": "Lottery.pickWinner",
      "offset": [
        505,
        512
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "247": {
      "op": "SHL"
    },
    "248": {
      "op": "SUB"
    },
    "249": {
      "fn": "Lottery.pickWinner",
      "offset": [
        505,
        512
      ],
      "op": "AND",
      "path": "0"
    },
    "250": {
      "fn": "Lottery.pickWinner",
      "offset": [
        491,
        501
      ],
      "op": "CALLER",
      "path": "0"
    },
    "251": {
      "branch": 8,
      "fn": "Lottery.pickWinner",
      "offset": [
        491,
        512
      ],
      "op": "EQ",
      "path": "0"
    },
    "252": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14C"
    },
    "255": {
      "branch": 8,
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "256": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "258": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "259": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "263": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "265": {
      "op": "SHL"
    },
    "266": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "DUP2",
      "path": "0"
    },
    "267": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "270": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "272": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "DUP3",
      "path": "0"
    },
    "273": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "ADD",
      "path": "0"
    },
    "274": {
      "op": "MSTORE"
    },
    "275": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "279": {
      "op": "DUP3"
    },
    "280": {
      "op": "ADD"
    },
    "281": {
      "op": "MSTORE"
    },
    "282": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206D616E616765722063616E207069636B2077696E6E657200000000"
    },
    "315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "317": {
      "op": "DUP3"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "op": "MSTORE"
    },
    "320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "322": {
      "op": "ADD"
    },
    "323": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "326": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "327": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "DUP1",
      "path": "0"
    },
    "328": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "329": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "SUB",
      "path": "0"
    },
    "330": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "331": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "332": {
      "fn": "Lottery.pickWinner",
      "offset": [
        483,
        545
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "333": {
      "fn": "Lottery.pickWinner",
      "offset": [
        563,
        570
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x1"
    },
    "335": {
      "fn": "Lottery.pickWinner",
      "offset": [
        563,
        577
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "336": {
      "fn": "Lottery.pickWinner",
      "offset": [
        581,
        582
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "338": {
      "op": "GT"
    },
    "339": {
      "branch": 9,
      "fn": "Lottery.pickWinner",
      "offset": [
        563,
        582
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "340": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x194"
    },
    "343": {
      "branch": 9,
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "344": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "346": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "347": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "351": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "353": {
      "op": "SHL"
    },
    "354": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "358": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "360": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "DUP3",
      "path": "0"
    },
    "361": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "ADD",
      "path": "0"
    },
    "362": {
      "op": "MSTORE"
    },
    "363": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "365": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "367": {
      "op": "DUP3"
    },
    "368": {
      "op": "ADD"
    },
    "369": {
      "op": "MSTORE"
    },
    "370": {
      "op": "PUSH18",
      "value": "0x4E6F7420656E6F75676820706C6179657273"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x70"
    },
    "391": {
      "op": "SHL"
    },
    "392": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "394": {
      "op": "DUP3"
    },
    "395": {
      "op": "ADD"
    },
    "396": {
      "op": "MSTORE"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "399": {
      "op": "ADD"
    },
    "400": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "403": {
      "op": "JUMP"
    },
    "404": {
      "fn": "Lottery.pickWinner",
      "offset": [
        555,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "405": {
      "fn": "Lottery.pickWinner",
      "offset": [
        640,
        647
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "407": {
      "fn": "Lottery.pickWinner",
      "offset": [
        640,
        654
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "408": {
      "fn": "Lottery.pickWinner",
      "offset": [
        616,
        626
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "410": {
      "fn": "Lottery.pickWinner",
      "offset": [
        616,
        626
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "411": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        637
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A2"
    },
    "414": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        635
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x33E"
    },
    "417": {
      "fn": "Lottery.pickWinner",
      "jump": "i",
      "offset": [
        629,
        637
      ],
      "op": "JUMP",
      "path": "0"
    },
    "418": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        637
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "419": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1AC"
    },
    "422": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        654
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "423": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "424": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        654
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x413"
    },
    "427": {
      "fn": "Lottery.pickWinner",
      "jump": "i",
      "offset": [
        629,
        654
      ],
      "op": "JUMP",
      "path": "0"
    },
    "428": {
      "fn": "Lottery.pickWinner",
      "offset": [
        629,
        654
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "429": {
      "fn": "Lottery.pickWinner",
      "offset": [
        616,
        654
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "430": {
      "fn": "Lottery.pickWinner",
      "offset": [
        616,
        654
      ],
      "op": "POP",
      "path": "0"
    },
    "431": {
      "fn": "Lottery.pickWinner",
      "offset": [
        664,
        678
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "433": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "435": {
      "fn": "Lottery.pickWinner",
      "offset": [
        689,
        694
      ],
      "op": "DUP3",
      "path": "0"
    },
    "436": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "437": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "438": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "439": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "LT",
      "path": "0"
    },
    "440": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3"
    },
    "443": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "444": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C3"
    },
    "447": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x435"
    },
    "450": {
      "fn": "Lottery.pickWinner",
      "jump": "i",
      "offset": [
        681,
        695
      ],
      "op": "JUMP",
      "path": "0"
    },
    "451": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "452": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "454": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "455": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "456": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "457": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "459": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "460": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "461": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "ADD",
      "path": "0"
    },
    "462": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "463": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x40"
    },
    "465": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "472": {
      "op": "SHL"
    },
    "473": {
      "op": "SUB"
    },
    "474": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "475": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "476": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "AND",
      "path": "0"
    },
    "477": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "478": {
      "op": "POP"
    },
    "479": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP3",
      "path": "0"
    },
    "480": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "481": {
      "fn": "Lottery.pickWinner",
      "offset": [
        730,
        751
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "482": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "483": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "484": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "487": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "MUL",
      "path": "0"
    },
    "488": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "489": {
      "fn": "Lottery.pickWinner",
      "offset": [
        730,
        751
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "490": {
      "fn": "Lottery.pickWinner",
      "offset": [
        730,
        751
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "491": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "492": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP2",
      "path": "0"
    },
    "493": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "DUP2",
      "path": "0"
    },
    "494": {
      "fn": "Lottery.pickWinner",
      "offset": [
        730,
        751
      ],
      "op": "DUP6",
      "path": "0"
    },
    "495": {
      "fn": "Lottery.pickWinner",
      "offset": [
        681,
        695
      ],
      "op": "DUP9",
      "path": "0"
    },
    "496": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "DUP9",
      "path": "0"
    },
    "497": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "CALL",
      "path": "0"
    },
    "498": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "499": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "POP",
      "path": "0"
    },
    "500": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "POP",
      "path": "0"
    },
    "501": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "POP",
      "path": "0"
    },
    "502": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "POP",
      "path": "0"
    },
    "503": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "504": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "505": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "506": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207"
    },
    "509": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "510": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "511": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "513": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "514": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "515": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "516": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "518": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "519": {
      "fn": "Lottery.pickWinner",
      "offset": [
        705,
        752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "op": "POP"
    },
    "521": {
      "fn": "Lottery.pickWinner",
      "offset": [
        762,
        776
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x214"
    },
    "524": {
      "fn": "Lottery.pickWinner",
      "offset": [
        769,
        776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "526": {
      "fn": "Lottery.pickWinner",
      "offset": [
        769,
        776
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "528": {
      "fn": "Lottery.pickWinner",
      "offset": [
        762,
        776
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x374"
    },
    "531": {
      "fn": "Lottery.pickWinner",
      "jump": "i",
      "offset": [
        762,
        776
      ],
      "op": "JUMP",
      "path": "0"
    },
    "532": {
      "fn": "Lottery.pickWinner",
      "offset": [
        762,
        776
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "533": {
      "fn": "Lottery.pickWinner",
      "offset": [
        473,
        783
      ],
      "op": "POP",
      "path": "0"
    },
    "534": {
      "fn": "Lottery.pickWinner",
      "offset": [
        473,
        783
      ],
      "op": "POP",
      "path": "0"
    },
    "535": {
      "fn": "Lottery.pickWinner",
      "jump": "o",
      "offset": [
        444,
        783
      ],
      "op": "JUMP",
      "path": "0"
    },
    "536": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "537": {
      "fn": "Lottery.getPlayers",
      "offset": [
        389,
        405
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "539": {
      "fn": "Lottery.getPlayers",
      "offset": [
        424,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x1"
    },
    "541": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "542": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "543": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "544": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "546": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MUL",
      "path": "0"
    },
    "547": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "549": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ADD",
      "path": "0"
    },
    "550": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "552": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "553": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "554": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "555": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ADD",
      "path": "0"
    },
    "556": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "558": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "559": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "560": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "561": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "562": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "563": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "564": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "565": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "566": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "568": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ADD",
      "path": "0"
    },
    "569": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "570": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "571": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "572": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "573": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "574": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x270"
    },
    "577": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "578": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "580": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MUL",
      "path": "0"
    },
    "581": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP3",
      "path": "0"
    },
    "582": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ADD",
      "path": "0"
    },
    "583": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "584": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "585": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "587": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "588": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "590": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "592": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "593": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "594": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "595": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "596": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "601": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "603": {
      "op": "SHL"
    },
    "604": {
      "op": "SUB"
    },
    "605": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "AND",
      "path": "0"
    },
    "606": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP2",
      "path": "0"
    },
    "607": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "608": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "610": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "611": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "612": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ADD",
      "path": "0"
    },
    "613": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "614": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "616": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "ADD",
      "path": "0"
    },
    "617": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP1",
      "path": "0"
    },
    "618": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "DUP4",
      "path": "0"
    },
    "619": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "GT",
      "path": "0"
    },
    "620": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x252"
    },
    "623": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "624": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "625": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "POP",
      "path": "0"
    },
    "626": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "POP",
      "path": "0"
    },
    "627": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "POP",
      "path": "0"
    },
    "628": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "POP",
      "path": "0"
    },
    "629": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "POP",
      "path": "0"
    },
    "630": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "631": {
      "fn": "Lottery.getPlayers",
      "offset": [
        417,
        431
      ],
      "op": "POP",
      "path": "0"
    },
    "632": {
      "fn": "Lottery.getPlayers",
      "offset": [
        346,
        438
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "633": {
      "fn": "Lottery.getPlayers",
      "jump": "o",
      "offset": [
        346,
        438
      ],
      "op": "JUMP",
      "path": "0"
    },
    "634": {
      "fn": "Lottery.enter",
      "offset": [
        196,
        340
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "635": {
      "fn": "Lottery.enter",
      "offset": [
        259,
        269
      ],
      "op": "PUSH7",
      "path": "0",
      "statement": 5,
      "value": "0x2386F26FC10000"
    },
    "643": {
      "fn": "Lottery.enter",
      "offset": [
        246,
        255
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "644": {
      "fn": "Lottery.enter",
      "offset": [
        246,
        269
      ],
      "op": "LT",
      "path": "0"
    },
    "645": {
      "branch": 10,
      "fn": "Lottery.enter",
      "offset": [
        246,
        269
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "646": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "649": {
      "branch": 10,
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "650": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "652": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "659": {
      "op": "SHL"
    },
    "660": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "661": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "664": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "666": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "DUP3",
      "path": "0"
    },
    "667": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "ADD",
      "path": "0"
    },
    "668": {
      "op": "MSTORE"
    },
    "669": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "671": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "673": {
      "op": "DUP3"
    },
    "674": {
      "op": "ADD"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH32",
      "value": "0x4D696E696D756D20302E30312045544820726571756972656400000000000000"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "711": {
      "op": "DUP3"
    },
    "712": {
      "op": "ADD"
    },
    "713": {
      "op": "MSTORE"
    },
    "714": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "716": {
      "op": "ADD"
    },
    "717": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "720": {
      "op": "JUMP"
    },
    "721": {
      "fn": "Lottery.enter",
      "offset": [
        238,
        299
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        316
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 6,
      "value": "0x1"
    },
    "724": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "DUP1",
      "path": "0"
    },
    "725": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "726": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "DUP1",
      "path": "0"
    },
    "727": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "DUP3",
      "path": "0"
    },
    "728": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "ADD",
      "path": "0"
    },
    "729": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "DUP3",
      "path": "0"
    },
    "730": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "733": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "734": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "735": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "736": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "737": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "770": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "ADD",
      "path": "0"
    },
    "771": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "DUP1",
      "path": "0"
    },
    "772": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "777": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "779": {
      "op": "SHL"
    },
    "780": {
      "op": "SUB"
    },
    "781": {
      "op": "NOT"
    },
    "782": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "AND",
      "path": "0"
    },
    "783": {
      "fn": "Lottery.enter",
      "offset": [
        322,
        332
      ],
      "op": "CALLER",
      "path": "0"
    },
    "784": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "OR",
      "path": "0"
    },
    "785": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "786": {
      "fn": "Lottery.enter",
      "offset": [
        309,
        333
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "787": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        196,
        340
      ],
      "op": "JUMP",
      "path": "0"
    },
    "788": {
      "offset": [
        108,
        132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "789": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "791": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "792": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "793": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "794": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "795": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "LT",
      "path": "0"
    },
    "796": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x324"
    },
    "799": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "800": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "802": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP1",
      "path": "0"
    },
    "803": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "REVERT",
      "path": "0"
    },
    "804": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "805": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "807": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "808": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "DUP3",
      "path": "0"
    },
    "809": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "810": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "812": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "813": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "814": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "815": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "ADD",
      "path": "0"
    },
    "816": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "819": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "op": "SUB"
    },
    "825": {
      "offset": [
        108,
        132
      ],
      "op": "AND",
      "path": "0"
    },
    "826": {
      "fn": "Lottery.enter",
      "offset": [
        108,
        132
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "offset": [
        108,
        132
      ],
      "op": "DUP2",
      "path": "0"
    },
    "829": {
      "fn": "Lottery.enter",
      "jump": "o",
      "offset": [
        108,
        132
      ],
      "op": "JUMP",
      "path": "0"
    },
    "830": {
      "fn": "Lottery.random",
      "offset": [
        789,
        936
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "831": {
      "fn": "Lottery.random",
      "offset": [
        829,
        833
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "833": {
      "fn": "Lottery.random",
      "offset": [
        884,
        900
      ],
      "op": "DIFFICULTY",
      "path": "0",
      "statement": 7
    },
    "834": {
      "fn": "Lottery.random",
      "offset": [
        902,
        917
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "835": {
      "fn": "Lottery.random",
      "offset": [
        919,
        926
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "837": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "839": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "840": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "842": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "ADD",
      "path": "0"
    },
    "843": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x356"
    },
    "846": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "847": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "848": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "849": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "850": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x44B"
    },
    "853": {
      "fn": "Lottery.random",
      "jump": "i",
      "offset": [
        867,
        927
      ],
      "op": "JUMP",
      "path": "0"
    },
    "854": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "855": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "857": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "858": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "860": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "861": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "DUP4",
      "path": "0"
    },
    "862": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SUB",
      "path": "0"
    },
    "863": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SUB",
      "path": "0"
    },
    "864": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "DUP2",
      "path": "0"
    },
    "865": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "866": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "867": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "869": {
      "fn": "Lottery.random",
      "offset": [
        867,
        927
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "870": {
      "fn": "Lottery.random",
      "offset": [
        857,
        928
      ],
      "op": "DUP1",
      "path": "0"
    },
    "871": {
      "fn": "Lottery.random",
      "offset": [
        857,
        928
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "872": {
      "fn": "Lottery.random",
      "offset": [
        857,
        928
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "873": {
      "fn": "Lottery.random",
      "offset": [
        857,
        928
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "875": {
      "fn": "Lottery.random",
      "offset": [
        857,
        928
      ],
      "op": "ADD",
      "path": "0"
    },
    "876": {
      "fn": "Lottery.random",
      "offset": [
        857,
        928
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "877": {
      "fn": "Lottery.random",
      "offset": [
        852,
        929
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "879": {
      "fn": "Lottery.random",
      "offset": [
        852,
        929
      ],
      "op": "SHR",
      "path": "0"
    },
    "880": {
      "fn": "Lottery.random",
      "offset": [
        845,
        929
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "881": {
      "fn": "Lottery.random",
      "offset": [
        845,
        929
      ],
      "op": "POP",
      "path": "0"
    },
    "882": {
      "fn": "Lottery.random",
      "offset": [
        789,
        936
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "883": {
      "fn": "Lottery.random",
      "jump": "o",
      "offset": [
        789,
        936
      ],
      "op": "JUMP",
      "path": "0"
    },
    "884": {
      "op": "JUMPDEST"
    },
    "885": {
      "op": "POP"
    },
    "886": {
      "op": "DUP1"
    },
    "887": {
      "op": "SLOAD"
    },
    "888": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "890": {
      "op": "DUP3"
    },
    "891": {
      "op": "SSTORE"
    },
    "892": {
      "op": "SWAP1"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "895": {
      "op": "MSTORE"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "900": {
      "op": "KECCAK256"
    },
    "901": {
      "op": "SWAP1"
    },
    "902": {
      "op": "DUP2"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "op": "SWAP1"
    },
    "905": {
      "op": "PUSH2",
      "value": "0x392"
    },
    "908": {
      "op": "SWAP2"
    },
    "909": {
      "op": "SWAP1"
    },
    "910": {
      "op": "PUSH2",
      "value": "0x395"
    },
    "913": {
      "jump": "i",
      "op": "JUMP"
    },
    "914": {
      "op": "JUMPDEST"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "jump": "o",
      "op": "JUMP"
    },
    "917": {
      "op": "JUMPDEST"
    },
    "918": {
      "op": "JUMPDEST"
    },
    "919": {
      "op": "DUP1"
    },
    "920": {
      "op": "DUP3"
    },
    "921": {
      "op": "GT"
    },
    "922": {
      "op": "ISZERO"
    },
    "923": {
      "op": "PUSH2",
      "value": "0x3AA"
    },
    "926": {
      "op": "JUMPI"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "929": {
      "op": "DUP2"
    },
    "930": {
      "op": "SSTORE"
    },
    "931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "933": {
      "op": "ADD"
    },
    "934": {
      "op": "PUSH2",
      "value": "0x396"
    },
    "937": {
      "op": "JUMP"
    },
    "938": {
      "op": "JUMPDEST"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "op": "SWAP1"
    },
    "941": {
      "jump": "o",
      "op": "JUMP"
    },
    "942": {
      "op": "JUMPDEST"
    },
    "943": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "945": {
      "op": "DUP1"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "MSTORE"
    },
    "948": {
      "op": "DUP3"
    },
    "949": {
      "op": "MLOAD"
    },
    "950": {
      "op": "DUP3"
    },
    "951": {
      "op": "DUP3"
    },
    "952": {
      "op": "ADD"
    },
    "953": {
      "op": "DUP2"
    },
    "954": {
      "op": "SWAP1"
    },
    "955": {
      "op": "MSTORE"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "958": {
      "op": "SWAP2"
    },
    "959": {
      "op": "DUP5"
    },
    "960": {
      "op": "ADD"
    },
    "961": {
      "op": "SWAP1"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "964": {
      "op": "DUP5"
    },
    "965": {
      "op": "ADD"
    },
    "966": {
      "op": "SWAP1"
    },
    "967": {
      "op": "DUP4"
    },
    "968": {
      "op": "JUMPDEST"
    },
    "969": {
      "op": "DUP2"
    },
    "970": {
      "op": "DUP2"
    },
    "971": {
      "op": "LT"
    },
    "972": {
      "op": "ISZERO"
    },
    "973": {
      "op": "PUSH2",
      "value": "0x3EF"
    },
    "976": {
      "op": "JUMPI"
    },
    "977": {
      "op": "DUP4"
    },
    "978": {
      "op": "MLOAD"
    },
    "979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "981": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "983": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "985": {
      "op": "SHL"
    },
    "986": {
      "op": "SUB"
    },
    "987": {
      "op": "AND"
    },
    "988": {
      "op": "DUP4"
    },
    "989": {
      "op": "MSTORE"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "992": {
      "op": "SWAP4"
    },
    "993": {
      "op": "DUP5"
    },
    "994": {
      "op": "ADD"
    },
    "995": {
      "op": "SWAP4"
    },
    "996": {
      "op": "SWAP1"
    },
    "997": {
      "op": "SWAP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "SWAP2"
    },
    "1000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "PUSH2",
      "value": "0x3C8"
    },
    "1006": {
      "op": "JUMP"
    },
    "1007": {
      "op": "JUMPDEST"
    },
    "1008": {
      "op": "POP"
    },
    "1009": {
      "op": "SWAP1"
    },
    "1010": {
      "op": "SWAP6"
    },
    "1011": {
      "op": "SWAP5"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "op": "POP"
    },
    "1017": {
      "jump": "o",
      "op": "JUMP"
    },
    "1018": {
      "op": "JUMPDEST"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1023": {
      "op": "DUP3"
    },
    "1024": {
      "op": "DUP5"
    },
    "1025": {
      "op": "SUB"
    },
    "1026": {
      "op": "SLT"
    },
    "1027": {
      "op": "ISZERO"
    },
    "1028": {
      "op": "PUSH2",
      "value": "0x40C"
    },
    "1031": {
      "op": "JUMPI"
    },
    "1032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1034": {
      "op": "DUP1"
    },
    "1035": {
      "op": "REVERT"
    },
    "1036": {
      "op": "JUMPDEST"
    },
    "1037": {
      "op": "POP"
    },
    "1038": {
      "op": "CALLDATALOAD"
    },
    "1039": {
      "op": "SWAP2"
    },
    "1040": {
      "op": "SWAP1"
    },
    "1041": {
      "op": "POP"
    },
    "1042": {
      "jump": "o",
      "op": "JUMP"
    },
    "1043": {
      "op": "JUMPDEST"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "PUSH2",
      "value": "0x430"
    },
    "1050": {
      "op": "JUMPI"
    },
    "1051": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1061": {
      "op": "MSTORE"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1071": {
      "op": "REVERT"
    },
    "1072": {
      "op": "JUMPDEST"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "op": "MOD"
    },
    "1075": {
      "op": "SWAP1"
    },
    "1076": {
      "jump": "o",
      "op": "JUMP"
    },
    "1077": {
      "op": "JUMPDEST"
    },
    "1078": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1088": {
      "op": "MSTORE"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1093": {
      "op": "MSTORE"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1098": {
      "op": "REVERT"
    },
    "1099": {
      "op": "JUMPDEST"
    },
    "1100": {
      "op": "DUP4"
    },
    "1101": {
      "op": "DUP2"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "DUP3"
    },
    "1104": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1106": {
      "op": "DUP3"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "op": "MSTORE"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1113": {
      "op": "DUP3"
    },
    "1114": {
      "op": "ADD"
    },
    "1115": {
      "op": "DUP4"
    },
    "1116": {
      "op": "SLOAD"
    },
    "1117": {
      "op": "DUP5"
    },
    "1118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1120": {
      "op": "MSTORE"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1125": {
      "op": "KECCAK256"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1128": {
      "op": "JUMPDEST"
    },
    "1129": {
      "op": "DUP3"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "LT"
    },
    "1132": {
      "op": "ISZERO"
    },
    "1133": {
      "op": "PUSH2",
      "value": "0x48F"
    },
    "1136": {
      "op": "JUMPI"
    },
    "1137": {
      "op": "DUP2"
    },
    "1138": {
      "op": "SLOAD"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1145": {
      "op": "SHL"
    },
    "1146": {
      "op": "SUB"
    },
    "1147": {
      "op": "AND"
    },
    "1148": {
      "op": "DUP5"
    },
    "1149": {
      "op": "MSTORE"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1152": {
      "op": "SWAP1"
    },
    "1153": {
      "op": "SWAP4"
    },
    "1154": {
      "op": "ADD"
    },
    "1155": {
      "op": "SWAP3"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1158": {
      "op": "SWAP2"
    },
    "1159": {
      "op": "DUP3"
    },
    "1160": {
      "op": "ADD"
    },
    "1161": {
      "op": "SWAP2"
    },
    "1162": {
      "op": "ADD"
    },
    "1163": {
      "op": "PUSH2",
      "value": "0x468"
    },
    "1166": {
      "op": "JUMP"
    },
    "1167": {
      "op": "JUMPDEST"
    },
    "1168": {
      "op": "POP"
    },
    "1169": {
      "op": "SWAP2"
    },
    "1170": {
      "op": "SWAP8"
    },
    "1171": {
      "op": "SWAP7"
    },
    "1172": {
      "op": "POP"
    },
    "1173": {
      "op": "POP"
    },
    "1174": {
      "op": "POP"
    },
    "1175": {
      "op": "POP"
    },
    "1176": {
      "op": "POP"
    },
    "1177": {
      "op": "POP"
    },
    "1178": {
      "op": "POP"
    },
    "1179": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "71fbec17db07662080711a0adab67c4bd7ca36e6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract Lottery {\n    address public manager;\n    address[] public players;\n\n    constructor() {\n        manager = msg.sender;\n    }\n\n    function enter() public payable {\n        require(msg.value >= 0.01 ether, \"Minimum 0.01 ETH required\");\n        players.push(msg.sender);\n    }\n\n    function getPlayers() public view returns (address[] memory) {\n        return players;\n    }\n\n    function pickWinner() public {\n        require(msg.sender == manager, \"Only manager can pick winner\");\n        require(players.length >= 3, \"Not enough players\");\n\n        uint index = random() % players.length;\n        address winner = players[index];\n        payable(winner).transfer(address(this).balance);\n        delete players;\n    }\n\n    function random() private view returns (uint) {\n        return uint(keccak256(abi.encodePacked(block.difficulty, block.timestamp, players)));\n    }\n}\n",
  "sourceMap": "57:881:0:-:0;;;139:51;;;;;;;;;-1:-1:-1;163:7:0;:20;;-1:-1:-1;;;;;;163:20:0;173:10;163:20;;;57:881;;;;;;",
  "sourcePath": "contracts/Lottery.sol",
  "type": "contract"
}